{"version":3,"sources":["containers/Public/Login/styles.module.scss","containers/Public/Posts/PostCard/styles.module.scss","containers/Public/Post/styles.module.scss","containers/Public/UsersTable/styles.module.scss","containers/Public/styles.module.scss","components/Footer/styles.module.scss","config.ts","utils/history.ts","stores/Posts/index.ts","stores/Comments/index.ts","stores/Users/index.ts","stores/index.ts","components/PrivateRoute/index.tsx","components/Header/index.tsx","components/Footer/index.tsx","containers/Public/Posts/PostCard/index.tsx","containers/Public/Posts/index.tsx","containers/Public/Post/index.tsx","containers/Public/Login/index.tsx","containers/Public/UsersTable/index.tsx","containers/Public/index.tsx","containers/Admin/index.tsx","containers/App/index.tsx","index.tsx","components/Header/styles.module.scss","containers/Public/Posts/styles.module.scss"],"names":["module","exports","api","axios","create","baseURL","process","validateStatus","status","createBrowserHistory","makeObservable","this","page","limit","get","data","postsOnPage","console","log","posts","id","post","postsByUser","observable","action","comments","users","map","user","key","localStorage","setItem","JSON","stringify","removeItem","history","replace","userData","getItem","parse","setUser","e","configure","enforceActions","RootStore","postsStore","commentsStore","usersStore","rootStore","StoreContext","createContext","useStore","store","useContext","Error","PrivateRoute","props","allow","message","warning","to","redirectTo","Header","className","styles","header","justify","align","icon","avatar","name","type","size","signOut","onClick","unsetUser","success","span","wrapBtn","OrderedListOutlined","btn","TableOutlined","Footer","footer","Text","PostCard","classNames","card","hoverable","cover","img","alt","src","Meta","title","description","body","text","Posts","observer","useState","filterPosts","setFilterPosts","currentPage","setCurrentPage","useEffect","getPosts","getPostsByPage","xs","sm","md","wrapSearch","Search","placeholder","onSearch","search","onChange","currValue","target","value","toLocaleLowerCase","filteredPosts","filter","toLowerCase","indexOf","length","gutter","info","pagination","current","defaultCurrent","pageSize","total","showSizeChanger","Post","params","useParams","getPost","getCommentsById","commentsList","comment","actions","author","email","content","datetime","time","dayjs","format","onBack","push","itemLayout","dataSource","renderItem","item","Item","Login","userId","setUserId","getUsers","login","form","alert","showSearch","optionFilterProp","Option","loading","find","notification","open","block","columns","dataIndex","sortDirections","sorter","a","b","localeCompare","responsive","showOnResponse","render","website","href","rel","_","uniqueId","UsersTable","setDataSource","filteredData","sorted","Public","layout","Content","path","component","withRouter","Admin","App","authUser","roles","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.9bbc9d60.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"styles_login__Srsip\",\"form\":\"styles_form__d5HOI\",\"icon\":\"styles_icon__2BhNv\",\"alert\":\"styles_alert__1YLw4\",\"search\":\"styles_search__3YnJS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"styles_img__1B22x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"styles_content__3sTjA\",\"posts\":\"styles_posts__3ppSY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapSearch\":\"styles_wrapSearch__1ybxq\",\"search\":\"styles_search__1bMcB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"styles_layout__1s-rR\",\"content\":\"styles_content__3Kcco\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"styles_footer__2qAln\"};","import axios from 'axios'\r\n\r\nexport const api = axios.create({\r\n  baseURL: process.env.REACT_APP_HOST,\r\n  validateStatus: status => true,\r\n})\r\n\r\nexport const MAX_POSTS_ON_PAGE = 8\r\nexport const MAX_POSTS_LOAD = 16\r\n// here you can define constant's for project or inintial configuration for packages\r\n","import { createBrowserHistory } from 'history'\r\n\r\nexport default createBrowserHistory()\r\n","import { observable, action, makeObservable } from 'mobx'\r\n\r\nimport { api } from 'config'\r\n\r\nclass Store {\r\n  constructor() {\r\n    makeObservable(this)\r\n  }\r\n\r\n  @observable posts: any = []\r\n  @observable post: any = {}\r\n  @observable postsOnPage: any = []\r\n  @observable postsByUser: any = []\r\n\r\n  @action\r\n  async getPostsByPage(page: number, limit: number) {\r\n    try {\r\n      const { data } = await api.get(`posts?_page=${page}&_limit=${limit}`)\r\n      if (data) {\r\n        this.postsOnPage = data\r\n      }  \r\n    } catch (error) {\r\n      console.log(error, 'error')\r\n    }\r\n  }\r\n\r\n  @action\r\n  async getPosts() {\r\n    try {\r\n      const { data } = await api.get('posts')\r\n      if (data) {\r\n        this.posts = data\r\n      }  \r\n    } catch (error) {\r\n      console.log(error, 'error')\r\n    }\r\n  }\r\n\r\n  @action\r\n  async getPost(id = '1') {\r\n    try {\r\n      const { data } = await api.get(`posts/${id}`)\r\n      if (data) {\r\n        this.post = data\r\n      }  \r\n    } catch (error) {\r\n      console.log(error, 'error')\r\n    }\r\n  }\r\n\r\n  @action\r\n  async getPostsByUser(id = '1') {\r\n    try {\r\n      const { data } = await api.get(`posts?userId=${id}`)\r\n      if (data) {\r\n        this.postsByUser = data\r\n      }  \r\n    } catch (error) {\r\n      console.log(error, 'error')\r\n    }\r\n  }\r\n}\r\n\r\nexport default new Store()","import { observable, action, makeObservable } from 'mobx'\r\n\r\nimport { api } from 'config'\r\n\r\nclass Store {\r\n  constructor() {\r\n    makeObservable(this)\r\n  }\r\n\r\n  @observable comments: any = []\r\n\r\n  @action\r\n  async getCommentsById(id = '1') {\r\n    try {\r\n      const { data } = await api.get(`comments?postId=${id}`)\r\n      if (data) {\r\n        this.comments = data;\r\n      }  \r\n    } catch (error) {\r\n      console.log(error, 'error')\r\n    }\r\n  }\r\n}\r\n\r\nexport default new Store()","import { observable, action, makeObservable } from 'mobx'\r\nimport history from 'utils/history'\r\n\r\nimport { api } from 'config'\r\n\r\nclass Store {\r\n  constructor() {\r\n    makeObservable(this)\r\n  }\r\n\r\n  @observable users: any = []\r\n  @observable user: any = {}\r\n\r\n  @action\r\n  async getUsers() {\r\n    try {\r\n      const { data } = await api.get('users')\r\n      if (data) {\r\n        this.users = data.map((user: any) => ({ ...user, key: user.id }))\r\n      }\r\n    } catch (error) {\r\n      console.log(error, 'error')\r\n    }\r\n  }\r\n\r\n  @action\r\n  async getUser(id = '1') {\r\n    try {\r\n      const { data } = await api.get(`users/${id}`)\r\n      if (data) {\r\n        this.user = data\r\n      }\r\n    } catch (error) {\r\n      console.log(error, 'error')\r\n    }\r\n  }\r\n\r\n  @action\r\n  setUser(user: any) {\r\n    this.user = user\r\n    localStorage.setItem('user', JSON.stringify(user))\r\n  }\r\n\r\n  @action\r\n  unsetUser() {\r\n    this.user = {}\r\n    localStorage.removeItem('user')\r\n    history.replace('/')\r\n  }\r\n\r\n  @action\r\n  authUser() {\r\n    try {\r\n      const userData = localStorage.getItem('user')\r\n      if (userData) {\r\n        let user = JSON.parse(userData)\r\n        this.setUser(user)\r\n      }\r\n    } catch (e) {\r\n      return null\r\n    }\r\n  }\r\n}\r\n\r\nexport default new Store()\r\n","import { createContext, useContext } from 'react'\r\nimport { configure, observable } from 'mobx'\r\n\r\nimport postsStore from './Posts'\r\nimport commentsStore from './Comments'\r\nimport usersStore from './Users'\r\n\r\nconfigure({ enforceActions: 'observed' })\r\n\r\nclass RootStore {\r\n  @observable postsStore = postsStore\r\n  @observable commentsStore = commentsStore\r\n  @observable usersStore = usersStore\r\n}\r\n\r\nconst rootStore = new RootStore()\r\n\r\nexport const StoreContext = createContext<RootStore>(rootStore)\r\n\r\nexport const useStore = (): RootStore => {\r\n  const store = useContext(StoreContext)\r\n  if (!store) {\r\n    throw new Error('You have forgot to use StoreProvider, shame on you.')\r\n  }\r\n  return store\r\n}\r\n\r\nexport default new RootStore()","import React from 'react'\r\nimport { Route, Redirect } from 'react-router'\r\nimport { message } from 'antd'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst PrivateRoute = (props: any) => {\r\n  let allow = false\r\n\r\n  // here private logic ...\r\n  // const userRoles = ['customer']\r\n  // if (userRoles.some(userRole => props.roles.includes(userRole))) allow = true\r\n  allow = props.user.id && props.user.id === 1\r\n\r\n  // show a notification\r\n  if (!allow) message.warning(props.message ? props.message : `You have not access to this page`)\r\n\r\n  return allow ? <Route {...props} /> : <Redirect to={props.redirectTo ? props.redirectTo : '/'} />\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n  roles: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  message: PropTypes.string,\r\n  path: PropTypes.string,\r\n  redirectTo: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n  component: PropTypes.any,\r\n}\r\n\r\nexport default PrivateRoute","import React from 'react'\r\nimport { Layout, Button, Avatar, message, Row, Col } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\nimport { OrderedListOutlined, TableOutlined } from '@ant-design/icons'\r\n\r\nimport { useStore } from 'stores'\r\n\r\nimport styles from './styles.module.scss'\r\n\r\nconst Header = () => {\r\n  const { usersStore } = useStore()\r\n  const { user } = usersStore\r\n\r\n  const onClickSignOut = () => {\r\n    usersStore.unsetUser()\r\n    message.success('Goodbye! You sign out', 3)\r\n  }\r\n\r\n  return (\r\n    <Layout.Header>\r\n      <Row className={styles.header} justify=\"space-between\" align=\"top\">\r\n        {user.id ? (\r\n          <div className={styles.user}>\r\n            <Avatar icon=\"user\" className={styles.avatar} />\r\n            <span>{user.name}</span>\r\n            {user.id === 1 && (\r\n              <span>\r\n                &nbsp;\r\n                <Link to=\"/admin\">\r\n                  <Button type=\"dashed\" size=\"small\">\r\n                    Admin panel\r\n                  </Button>\r\n                </Link>\r\n              </span>\r\n            )}\r\n            ,&nbsp;\r\n            <span className={styles.signOut} onClick={onClickSignOut}>\r\n              Sign Out\r\n            </span>\r\n            .\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <Col span={12} className={styles.wrapBtn}>\r\n              <Link to=\"/\">\r\n                <Button type=\"primary\" icon={<OrderedListOutlined />} className={styles.btn}>\r\n                  Posts\r\n                </Button>\r\n              </Link>\r\n            </Col>\r\n\r\n            <Col span={12} className={styles.wrapBtn}>\r\n              <Link to=\"/table\">\r\n                <Button type=\"primary\" icon={<TableOutlined />} className={styles.btn}>\r\n                  Users table\r\n                </Button>\r\n              </Link>\r\n            </Col>\r\n          </>\r\n        )}\r\n      </Row>\r\n    </Layout.Header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Layout, Typography } from 'antd'\r\n\r\nimport styles from './styles.module.scss'\r\n\r\nconst Footer = () => (\r\n  <Layout.Footer className={styles.footer}>\r\n    <Typography.Text>Application template footer &copy;</Typography.Text>\r\n  </Layout.Footer>\r\n)\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport { Card } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\nimport classNames from 'classnames'\r\n\r\nimport styles from './styles.module.scss'\r\n\r\nconst PostCard = (post: any) => {\r\n  return (\r\n    <Link to={`/post/${post.id}`}>\r\n      <Card\r\n        className={classNames(styles.card)}\r\n        key={post.id}\r\n        hoverable\r\n        cover={\r\n          <img className={styles.img} alt=\"example\" src={`${process.env.REACT_APP_PICTURE_API}?random=${post.id}`} />\r\n        }\r\n      >\r\n        <Card.Meta title={post.title} description={post.body} className={styles.text} />\r\n      </Card>\r\n    </Link>\r\n  )\r\n}\r\n\r\nexport default PostCard\r\n","import React, { useEffect, useState } from 'react'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { Input, Row, Col, Pagination, Typography } from 'antd'\r\nimport classNames from 'classnames'\r\n\r\nimport { MAX_POSTS_ON_PAGE } from 'config'\r\nimport { useStore } from 'stores'\r\nimport PostCard from './PostCard'\r\n\r\nimport styles from './styles.module.scss'\r\n\r\nconst Posts = observer(() => {\r\n  const { postsStore } = useStore()\r\n  const { posts, postsOnPage } = postsStore\r\n\r\n  const [filterPosts, setFilterPosts] = useState(postsOnPage)\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n\r\n  useEffect(() => {\r\n    postsStore.getPosts()\r\n    postsStore.getPostsByPage(currentPage, MAX_POSTS_ON_PAGE)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    setFilterPosts(postsOnPage)\r\n  }, [postsOnPage])\r\n\r\n  const onChangeFilterPosts = ({ target }: React.ChangeEvent<HTMLInputElement>) => {\r\n    const currValue = target.value.toLocaleLowerCase()\r\n    if (currValue === '') {\r\n      setFilterPosts(postsOnPage)\r\n    }\r\n\r\n    const filteredPosts = postsOnPage.filter((post: any) => {\r\n      const title = post.title.toLowerCase()\r\n      const body = post.body.toLowerCase()\r\n\r\n      return title.indexOf(currValue) > -1 || body.indexOf(currValue) > -1\r\n    })\r\n\r\n    setFilterPosts(filteredPosts)\r\n  }\r\n\r\n  const onChangePage = (page: number) => {\r\n    setCurrentPage(page)\r\n    postsStore.getPostsByPage(page, MAX_POSTS_ON_PAGE)\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Row justify=\"center\">\r\n        <Col span={5} xs={20} sm={11} md={6} className={styles.wrapSearch}>\r\n          <Input.Search\r\n            placeholder=\"Search by post name and description\"\r\n            size=\"large\"\r\n            onSearch={() => {}}\r\n            className={styles.search}\r\n            onChange={onChangeFilterPosts}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      {filterPosts.length > 0 ? (\r\n        <Row gutter={[16, 16]} justify=\"center\" align=\"top\" className={classNames(styles.posts)}>\r\n          {filterPosts.map((post: any) => (\r\n            <Col span={5} xs={20} sm={11} md={6} key={post.id}>\r\n              <PostCard key={post.id} {...post} />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      ) : <Typography.Text type=\"secondary\" className={styles.info}>No searching posts...</Typography.Text>}\r\n\r\n      <Pagination\r\n        className={styles.pagination}\r\n        current={currentPage}\r\n        defaultCurrent={currentPage}\r\n        pageSize={MAX_POSTS_ON_PAGE}\r\n        total={posts.length}\r\n        showSizeChanger={false}\r\n        onChange={onChangePage}\r\n      />\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default Posts\r\n","import React, { useEffect } from 'react'\r\nimport { PageHeader, Row, Col, Rate, Comment, Tooltip, List, Avatar } from 'antd'\r\nimport { observer } from 'mobx-react-lite'\r\nimport dayjs from 'dayjs'\r\nimport { Link, useParams } from 'react-router-dom'\r\n\r\nimport { useStore } from 'stores'\r\nimport history from 'utils/history'\r\n\r\nimport styles from './styles.module.scss'\r\n\r\ninterface IParams {\r\n  id: string\r\n}\r\n\r\nconst Post = observer(() => {\r\n  const params: IParams = useParams()\r\n  const { postsStore, commentsStore } = useStore()\r\n\r\n  const { post, posts } = postsStore\r\n  const { comments } = commentsStore\r\n\r\n  useEffect(() => {\r\n    postsStore.getPost(params.id)\r\n    commentsStore.getCommentsById(params.id)\r\n    postsStore.getPosts()\r\n  }, [])\r\n\r\n  const commentsList = comments.map((comment: any) => ({\r\n    actions: [<span>Reply to</span>],\r\n    author: comment.email,\r\n    avatar: process.env.REACT_APP_AVATAR,\r\n    content: <p>{comment.body}</p>,\r\n    datetime: () => {\r\n      let time = dayjs().format('DD/MM/YYYY HH:MM:SS')\r\n\r\n      return (\r\n        <Tooltip title=\"Time: \">\r\n          <span>{time}</span>\r\n        </Tooltip>\r\n      )\r\n    },\r\n  }))\r\n\r\n  return (\r\n    <div>\r\n      <PageHeader onBack={() => history.push('/')} title={post.title} />\r\n      <Row className={styles.content}>\r\n        <Col md={10} sm={20}>\r\n          <p>{post.body}</p>\r\n          <Rate value={4} />\r\n\r\n          <List\r\n            header={`${commentsList.length} comments`}\r\n            itemLayout=\"horizontal\"\r\n            dataSource={commentsList}\r\n            renderItem={(item: any) => (\r\n              <Comment\r\n                actions={item.actions}\r\n                author={item.author}\r\n                avatar={item.avatar}\r\n                content={item.content}\r\n                datetime={item.datetime()}\r\n              />\r\n            )}\r\n          />\r\n        </Col>\r\n\r\n        <Col md={10} sm={20} xs={24} className={styles.posts}>\r\n          <List\r\n            itemLayout=\"horizontal\"\r\n            dataSource={posts}\r\n            renderItem={(post: any) => (\r\n              <List.Item>\r\n                <List.Item.Meta\r\n                  avatar={<Avatar src={`${process.env.REACT_APP_PICTURE_API}?random=${post.id}`} />}\r\n                  title={<Link to={`${post.id}`}>{post.title}</Link>}\r\n                  description={post.body}\r\n                />\r\n              </List.Item>\r\n            )}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default Post\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Select, Button, Alert, message, notification } from 'antd'\r\n\r\nimport history from 'utils/history'\r\nimport { useStore } from 'stores'\r\n\r\nimport styles from './styles.module.scss'\r\n\r\nconst Login = () => {\r\n  const { usersStore } = useStore()\r\n  const { users } = usersStore\r\n  const [userId, setUserId] = useState(null)\r\n\r\n  useEffect(() => {\r\n    usersStore.getUsers()\r\n  }, [])\r\n\r\n  const onChangeUser = (userId: any) => {\r\n    setUserId(userId)\r\n  }\r\n\r\n  const onClickSignIn = () => {\r\n    if (!userId) {\r\n      return message.info(`Please, select user`, 3)\r\n    }\r\n\r\n    const user = users.find((user: any) => user.id === userId)\r\n\r\n    usersStore.setUser(user)\r\n    history.replace('/')\r\n\r\n    message.success(`Perfect! You signed in as ${user.name}`, 3)\r\n    if (user.id === 1) {\r\n      notification.open({\r\n        message: 'Admin section',\r\n        description: 'You have admin permissions. You can go to admin section using link \"Admin section\" in header',\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={styles.login}>\r\n      <div className={styles.form}>\r\n        <Alert message=\"Admin section available for Leanne Graham.\" type=\"info\" className={styles.alert} />\r\n        <Select\r\n          className={styles.search}\r\n          size=\"large\"\r\n          showSearch\r\n          placeholder=\"Select a person\"\r\n          optionFilterProp=\"children\"\r\n          onChange={onChangeUser}\r\n        >\r\n          {users.map((user: any) => (\r\n            <Select.Option key={user.id} value={user.id}>\r\n              {user.name}\r\n            </Select.Option>\r\n          ))}\r\n        </Select>\r\n        <Button type=\"primary\" size=\"large\" loading={false} onClick={onClickSignIn} block>\r\n          Sign In\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import React, { useEffect, useState } from 'react'\r\nimport { observer } from 'mobx-react-lite'\r\nimport _ from 'lodash'\r\nimport { Col, Input, Row, Table } from 'antd'\r\n\r\nimport { useStore } from 'stores'\r\n\r\nimport styles from './styles.module.scss'\r\n\r\nconst columns: any = [\r\n  {\r\n    title: 'ID',\r\n    dataIndex: 'id',\r\n    sortDirections: ['ascend', 'descend'],\r\n    sorter: (a: any, b: any) => a.id - b.id,\r\n  },\r\n  {\r\n    title: 'Name',\r\n    dataIndex: 'name',\r\n    sortDirections: ['ascend', 'descend'],\r\n    sorter: (a: any, b: any) => a.name.localeCompare(b.name),\r\n  },\r\n  {\r\n    title: 'User name',\r\n    dataIndex: 'username',\r\n    responsive: ['md'],\r\n  },\r\n  {\r\n    title: 'Email',\r\n    dataIndex: 'email',\r\n    responsive: ['sm'],\r\n  },\r\n  {\r\n    title: 'Website',\r\n    dataIndex: 'website',\r\n    responsive: ['md'],\r\n    showOnResponse: false,\r\n    render: (website: any) => (\r\n      <a href={website} target=\"_blank\" rel=\"noreferrer\" key={_.uniqueId()}>\r\n        {website}\r\n      </a>\r\n    ),\r\n  },\r\n]\r\n\r\nconst UsersTable = observer(() => {\r\n  const { usersStore } = useStore()\r\n  const { users } = usersStore\r\n\r\n  const [dataSource, setDataSource] = useState(users)\r\n\r\n  useEffect(() => {\r\n    usersStore.getUsers()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    setDataSource(users)\r\n  }, [users])\r\n\r\n  const onChangeTable = (sorted: any) => {}\r\n\r\n  const onChangeFilterUsers = ({ target }: React.ChangeEvent<HTMLInputElement>) => {\r\n    const currValue = target.value.toLocaleLowerCase()\r\n    const filteredData = users.filter((user: any) => {\r\n      const name = user.name.toLowerCase()\r\n      return name.indexOf(currValue) > -1\r\n    })\r\n\r\n    setDataSource(filteredData)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Row justify=\"center\">\r\n        <Col span={5} xs={20} sm={11} md={6} className={styles.wrapSearch}>\r\n          <Input.Search\r\n            placeholder=\"Search user by name\"\r\n            size=\"large\"\r\n            onSearch={() => {}}\r\n            className={styles.search}\r\n            onChange={onChangeFilterUsers}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <Table size=\"small\" columns={columns} dataSource={dataSource} pagination={false} onChange={onChangeTable}></Table>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default UsersTable\r\n","import React from 'react'\r\nimport { Switch, Route, withRouter } from 'react-router'\r\nimport { Layout } from 'antd'\r\n\r\nimport Header from 'components/Header'\r\nimport Footer from 'components/Footer'\r\nimport Posts from './Posts'\r\nimport Post from './Post'\r\nimport Login from './Login'\r\nimport UsersTable from './UsersTable'\r\n\r\nimport styles from './styles.module.scss'\r\n\r\nconst Public = () => {\r\n  return (\r\n    <Layout className={styles.layout}>\r\n      <Header />\r\n      <Layout.Content className={styles.content}>\r\n        <Switch>\r\n          <Route path=\"/login\" component={Login} />\r\n          <Route path=\"/post/:id\" component={withRouter(Post)} />\r\n          <Route path=\"/table\" component={UsersTable} />\r\n          <Route path=\"/\" component={Posts} />\r\n        </Switch>\r\n      </Layout.Content>\r\n      <Footer />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Public\r\n","import React from 'react'\r\n\r\nconst Admin = () => <div>Admin</div>\r\n\r\nexport default Admin","import React, { useEffect } from 'react'\r\nimport { Router, Switch, Route } from 'react-router'\r\n\r\nimport history from 'utils/history'\r\nimport { useStore } from 'stores'\r\n\r\nimport PrivateRoute from 'components/PrivateRoute'\r\nimport Public from '../Public'\r\nimport Admin from '../Admin'\r\n\r\nconst App = () => {\r\n  const { usersStore } = useStore()\r\n\r\n  useEffect(() => {\r\n    usersStore.authUser()\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <Router history={history}>\r\n        <Switch>\r\n          <PrivateRoute roles={['admin']} path=\"/admin\" component={Admin} />\r\n          <Route path=\"/\" component={Public} />\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import './config'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './containers/App'\n\n// normalize and basic styles for application\nimport 'normalize.css'\nimport 'antd/dist/antd.css'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'sources/styles/styles.scss'\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"styles_header__2nzay\",\"user\":\"styles_user__1QrNT\",\"avatar\":\"styles_avatar__39q0P\",\"signOut\":\"styles_signOut__1kUs4\",\"wrapBtn\":\"styles_wrapBtn__1qs6C\",\"btn\":\"styles_btn__39byB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapSearch\":\"styles_wrapSearch__1CHx1\",\"search\":\"styles_search__3y8XD\",\"info\":\"styles_info__2mhPf\",\"posts\":\"styles_posts__3e1k0\",\"pagination\":\"styles_pagination__1cV5g\"};"],"sourceRoot":""}